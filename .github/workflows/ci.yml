name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    env:
        SURGE_LOGIN:  ${{ secrets.SURGE_LOGIN }}
        SURGE_TOKEN:  ${{ secrets.SURGE_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run format
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: Build project
        run: npm run build
        if: github.event_name == 'push'
      - name: Upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build-folder
          path: build
      - name: zip assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip build
          zip -r coverage.zip coverage
      - name: Create a release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      - name: Deploy on staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain http://flawless-net.surge.sh/
      - name: Deploy on production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain yellow-hope.surge.sh
      - name: upload coverage report
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
